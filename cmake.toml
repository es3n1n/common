[cmake]
version = "3.15"
cmkr-include = "cmake/cmkr.cmake"

[project]
name = "common"
languages = ["CXX"]

[options]
COMMON_LINK_TO_HOMEBREW_STL = false
COMMON_BUILD_TESTS = false
COMMON_BUILD_BENCHMARKS = false
BENCHMARK_ENABLE_TESTING = false
BENCHMARK_ENABLE_GTEST_TESTS = false
BENCHMARK_USE_BUNDLED_GTEST = false

[conditions]
common-build-tests = "COMMON_BUILD_TESTS"
common-build-benchmarks = "COMMON_BUILD_BENCHMARKS"

[target.common]
alias = "es3n1n::common"
type = "interface"
compile-features = ["cxx_std_23"]
compile-definitions = ["NOMINMAX"]
include-directories = ["include/"]
cmake-after = """
if(CMAKE_SYSTEM_NAME MATCHES "Darwin" AND
    COMMON_LINK_TO_HOMEBREW_STL)
    message(STATUS "Linking to libc++ from Homebrew")
    target_link_directories(common INTERFACE
        /opt/homebrew/opt/llvm/lib/c++
    )
endif()
"""

[fetch-content.GTest]
git = "https://github.com/google/googletest"
tag = "v1.15.2"
condition = "common-build-tests"
cmake-before = """
if(UNIX AND
    CMAKE_CXX_COMPILER_ID MATCHES "Clang" AND NOT
    CMAKE_CXX_COMPILER_FRONTEND_VARIANT MATCHES "^MSVC$") # clang
    message(STATUS "Enforcing libc++ for clang")
    # FIXME(es3n1n): This looks somewhat disturbing, but hey at least it works
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
endif()
"""

[fetch-content.GBenchmark]
git = "https://github.com/google/benchmark"
tag = "v1.8.5"
condition = "common-build-benchmarks"

[target.common-project]
alias = "es3n1n::common::project"
type = "interface"
compile-features = ["cxx_std_23"]
msvc.compile-options = ["/MP"]

[target.common-tests]
type = "executable"
condition = "common-build-tests"
sources = ["tests/**.cpp"]
include-directories = ["tests/"]
link-libraries = ["es3n1n::common", "es3n1n::common::project", "GTest::gtest_main"]

[target.common-benchmarks]
type = "executable"
condition = "common-build-benchmarks"
sources = ["benchmark/**.cpp"]
include-directories = ["src/benchmark/"]
link-libraries = ["es3n1n::common", "es3n1n::common::project", "benchmark::benchmark"]
